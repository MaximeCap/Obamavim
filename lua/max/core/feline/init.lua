-- -- Feline statusline definition.
-- --
-- -- Note: This statusline does not define any colors. Instead the statusline is
-- -- built on custom highlight groups that I define. The colors for these
-- -- highlight groups are pulled from the current colorscheme applied. Check the
-- -- file: `lua/eden/modules/ui/colors.lua` to see how they are defined.

-- local u = require("max.core.feline.util")
-- local fmt = string.format
-- local lsp = require("feline.providers.lsp")

-- -- "┃", "█", "", "", "", "", "", "", "●"

-- local function vi_mode_hl()
--   return u.vi.colors[vim.fn.mode()] or "FlnViBlack"
-- end

-- local function vi_sep_hl()
--   return u.vi.sep[vim.fn.mode()] or "FlnBlack"
-- end

-- local c = {
--   vimode = {
--     provider = function()
--       return string.format(" %s ", u.vi.text[vim.fn.mode()])
--     end,
--     hl = vi_mode_hl,
--   },
--   gitbranch = {
--     provider = "git_branch",
--     icon = " ",
--     hl = "FlnGitBranch",
--     left_sep = "",
--     enabled = function()
--       return vim.b.gitsigns_status_dict ~= nil
--     end,
--   },
--   file_type = {
--     provider = { name = "file_type", opts = { case = "lowercase" } },
--     hl = "FlnAlt",
--     left_sep = { str = "   " },
--   },
--   fileinfo = {
--     provider = { name = "file_info", opts = { type = "relative" } },
--   },
--   file_enc = {
--     provider = function()
--       local os = u.icons[vim.bo.fileformat] or ""
--       return fmt(" %s %s ", os, vim.bo.fileencoding)
--     end,
--     hl = "StatusLine",
--     left_sep = { str = u.icons.left_filled, hl = "FlnAltSep" },
--   },
--   cur_position = {
--     provider = {
--       name = "position",
--       opts = { padding = true },
--     },
--     hl = vi_mode_hl,
--     left_sep = { str = u.icons.left_filled, hl = vi_sep_hl },
--     right_sep = { str = " " },
--   },
--   cur_percent = {
--     provider = "line_percentage",
--     hl = vi_mode_hl,
--     left_sep = { str = u.icons.left, hl = vi_mode_hl },
--   },
--   default = { -- needed to pass the parent StatusLine hl group to right hand side
--     provider = "",
--     hl = "StatusLine",
--   },
--   lsp_name = {
--     provider = "lsp_client_names",
--     hl = "FlnStatus",
--   },
--   lsp_status = {
--     provider = function()
--       return require("lsp-status").status()
--     end,
--     hl = "FlnStatus",
--     --[[ left_sep = { str = "", hl = "FlnStatusBg", always_visible = true },
--     right_sep = { str = "", hl = "FlnErrorStatus", always_visible = true }, ]]
--   },
--   lsp_error = {
--     provider = "diagnostic_errors",
--     hl = "FlnError",
--     --[[     right_sep = { str = "", hl = "FlnWarnError", always_visible = true }, ]]
--   },
--   lsp_warn = {
--     provider = "diagnostic_warnings",
--     hl = "FlnWarn",
--     --[[     right_sep = { str = "", hl = "FlnInfoWarn", always_visible = true }, ]]
--   },
--   lsp_info = {
--     provider = "diagnostic_info",
--     hl = "FlnInfo",
--     --[[     right_sep = { str = "", hl = "FlnHintInfo", always_visible = true }, ]]
--   },
--   lsp_hint = {
--     provider = "diagnostic_hints",
--     hl = "FlnHint",
--     --[[     right_sep = { str = "", hl = "FlnBgHint", always_visible = true }, ]]
--   },

--   in_fileinfo = {
--     provider = "file_info",
--     hl = "StatusLine",
--   },
--   in_position = {
--     provider = "position",
--     hl = "StatusLine",
--   },
-- }

-- local active = {
--   { -- left
--     c.vimode,
--     c.gitbranch,
--     c.default,
--   },
--   {
--     c.fileinfo,
--     c.default,
--   },
--   { -- right
--     c.lsp_name,
--     c.lsp_status,
--     c.lsp_error,
--     c.lsp_warn,
--     c.lsp_info,
--     c.lsp_hint,
--     c.file_type,
--     c.file_enc,
--     c.cur_position,
--     c.cur_percent,
--   },
-- }

-- local inactive = {
--   {},
--   { c.in_fileinfo }, -- left
--   { c.in_position }, -- right
-- }

-- require("feline").setup({
--   components = { active = active, inactive = inactive },
--   highlight_reset_triggers = {},
--   force_inactive = {
--     filetypes = {
--       "NvimTree",
--       "packer",
--       "dap-repl",
--       "dapui_scopes",
--       "dapui_stacks",
--       "dapui_watches",
--       "dapui_repl",
--       "LspTrouble",
--       "qf",
--       "help",
--     },
--     buftypes = { "terminal" },
--     bufnames = {},
--   },
--   disable = {
--     filetypes = {
--       "dashboard",
--       "startify",
--     },
--   },
-- })
